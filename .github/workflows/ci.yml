name: CI

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

jobs:
  Build-and-Tests:
    name: Build and Test
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.101
    - name: Add Nuget
      run: |
        cd src
        for proj in $(dotnet sln list)        
        do
          dotnet add "$proj" package JunitXml.TestLogger || true
        done
    - name: Test
      run: |
        cd src
        dotnet clean restore
        dotnet restore
        dotnet test --logger "junit;LogFileName=Report.xml"
    - name: Add Nuget
      run: |
        cd src
        for proj in $(dotnet sln list)        
        do
          dotnet add "$proj" package altcover || true
        done        
    - name: Test
      run: |
        cd src
        dotnet clean restore
        dotnet restore
        dotnet test /p:AltCover=true /p:AltCoverXmlreport="../altcover.xml"
    - name: ReportGenerator
      uses: danielpalme/ReportGenerator-GitHub-Action@4.8.4
      with:
        reports: 'altcover.xml' # REQUIRED # The coverage reports that should be parsed (separated by semicolon). Globbing is supported.
        targetdir: 'docs' # REQUIRED # The directory where the generated report should be saved.
        sourcedirs: 'src' 
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.1
      with:
        path: docs
        retention-days: 90  
    - name: Push Report
      uses: EndBug/add-and-commit@v4 # You can change this to use a specific version
      with:
        add: 'docs/*'
        message: 'Coverage Report ${GITHUB_SHA}' 
        ref: 'gh-pages' 
        remove: ''  
    - name: Publish Unit Test Results
      uses: docker://ghcr.io/enricomi/publish-unit-test-result-action:v1.6
      if: always()
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        files: src/**/*.xml
